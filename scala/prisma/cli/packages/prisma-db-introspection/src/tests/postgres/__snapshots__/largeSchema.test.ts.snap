// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Introspector large example database 1`] = `
Object {
  "numTables": 22,
  "sdl": "type Actor @pgTable(name: \\"actor\\") {
  id: Int! @unique @pgColumn(name: \\"actor_id\\")
  film_actors: [Film_actor!]!
  first_name: String!
  last_name: String!
  last_update: DateTime!
}

type Actor_info @pgTable(name: \\"actor_info\\") {
  actor_id: Int
  film_info: String
  first_name: String
  last_name: String
}

type Address @pgTable(name: \\"address\\") {
  id: Int! @unique @pgColumn(name: \\"address_id\\")
  address: String!
  address2: String
  city: City @pgRelation(column: \\"city_id\\")
  customers: [Customer!]!
  district: String!
  last_update: DateTime!
  phone: String!
  postal_code: String
  staff: [Staff!]!
  stores: [Store!]!
}

type Category @pgTable(name: \\"category\\") {
  id: Int! @unique @pgColumn(name: \\"category_id\\")
  film_categories: [Film_category!]!
  last_update: DateTime!
  name: String!
}

type City @pgTable(name: \\"city\\") {
  id: Int! @unique @pgColumn(name: \\"city_id\\")
  addresses: [Address!]!
  city: String!
  country: Country @pgRelation(column: \\"country_id\\")
  last_update: DateTime!
}

type Country @pgTable(name: \\"country\\") {
  id: Int! @unique @pgColumn(name: \\"country_id\\")
  cities: [City!]!
  country: String!
  last_update: DateTime!
}

type Customer @pgTable(name: \\"customer\\") {
  id: Int! @unique @pgColumn(name: \\"customer_id\\")
  active: Int
  activebool: Boolean! @default(value: true)
  address: Address @pgRelation(column: \\"address_id\\")
  create_date: DateTime!
  email: String
  first_name: String!
  last_name: String!
  last_update: DateTime
  payments: [Payment!]!
  rentals: [Rental!]!
  store_id: Int!
}

type Customer_list @pgTable(name: \\"customer_list\\") {
  address: String
  city: String
  country: String
  id: Int
  name: String
  notes: String
  phone: String
  sid: Int
  zip code: String
}

type Film @pgTable(name: \\"film\\") {
  id: Int! @unique @pgColumn(name: \\"film_id\\")
  description: String
  film_actors: [Film_actor!]!
  film_categories: [Film_category!]!
  # fulltext: null! # Type 'tsvector' is not yet supported.
  inventories: [Inventory!]!
  language: Language @pgRelation(column: \\"language_id\\")
  last_update: DateTime!
  length: Int
  # rating: null @default(value: G) # Type 'USER-DEFINED' is not yet supported.
  release_year: Int
  rental_duration: Int! @default(value: 3)
  rental_rate: Float! @default(value: 4.99)
  replacement_cost: Float! @default(value: 19.99)
  # special_features: null # Type 'ARRAY' is not yet supported.
  title: String!
}

type Film_actor @pgTable(name: \\"film_actor\\") {
  actor: Actor @pgRelation(column: \\"actor_id\\")
  film: Film @pgRelation(column: \\"film_id\\")
  last_update: DateTime!
}

type Film_category @pgTable(name: \\"film_category\\") {
  category: Category @pgRelation(column: \\"category_id\\")
  film: Film @pgRelation(column: \\"film_id\\")
  last_update: DateTime!
}

type Film_list @pgTable(name: \\"film_list\\") {
  actors: String
  category: String
  description: String
  fid: Int
  length: Int
  price: Float
  # rating: null # Type 'USER-DEFINED' is not yet supported.
  title: String
}

type Inventory @pgTable(name: \\"inventory\\") {
  id: Int! @unique @pgColumn(name: \\"inventory_id\\")
  film: Film @pgRelation(column: \\"film_id\\")
  last_update: DateTime!
  rentals: [Rental!]!
  store_id: Int!
}

type Language @pgTable(name: \\"language\\") {
  id: Int! @unique @pgColumn(name: \\"language_id\\")
  films: [Film!]!
  last_update: DateTime!
  name: String!
}

type Nicer_but_slower_film_list @pgTable(name: \\"nicer_but_slower_film_list\\") {
  actors: String
  category: String
  description: String
  fid: Int
  length: Int
  price: Float
  # rating: null # Type 'USER-DEFINED' is not yet supported.
  title: String
}

type Payment @pgTable(name: \\"payment\\") {
  id: Int! @unique @pgColumn(name: \\"payment_id\\")
  amount: Float!
  customer: Customer @pgRelation(column: \\"customer_id\\")
  payment_date: DateTime!
  rental: Rental @pgRelation(column: \\"rental_id\\")
  staff: Staff @pgRelation(column: \\"staff_id\\")
}

type Rental @pgTable(name: \\"rental\\") {
  id: Int! @unique @pgColumn(name: \\"rental_id\\")
  customer: Customer @pgRelation(column: \\"customer_id\\")
  inventory: Inventory @pgRelation(column: \\"inventory_id\\")
  last_update: DateTime!
  payments: [Payment!]!
  rental_date: DateTime!
  return_date: DateTime
  staff: Staff @pgRelation(column: \\"staff_id\\")
}

type Sales_by_film_category @pgTable(name: \\"sales_by_film_category\\") {
  category: String
  total_sales: Float
}

type Sales_by_store @pgTable(name: \\"sales_by_store\\") {
  manager: String
  store: String
  total_sales: Float
}

type Staff @pgTable(name: \\"staff\\") {
  id: Int! @unique @pgColumn(name: \\"staff_id\\")
  active: Boolean! @default(value: true)
  address: Address @pgRelation(column: \\"address_id\\")
  email: String
  first_name: String!
  last_name: String!
  last_update: DateTime!
  password: String
  payments: [Payment!]!
  # picture: null # Type 'bytea' is not yet supported.
  rentals: [Rental!]!
  store_id: Int!
  stores: [Store!]!
  username: String!
}

type Staff_list @pgTable(name: \\"staff_list\\") {
  address: String
  city: String
  country: String
  id: Int
  name: String
  phone: String
  sid: Int
  zip code: String
}

type Store @pgTable(name: \\"store\\") {
  id: Int! @unique @pgColumn(name: \\"store_id\\")
  address: Address @pgRelation(column: \\"address_id\\")
  last_update: DateTime!
  manager_staff: Staff @pgRelation(column: \\"manager_staff_id\\")
}",
}
`;
