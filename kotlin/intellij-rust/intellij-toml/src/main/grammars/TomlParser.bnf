// https://github.com/toml-lang/toml/blob/master/toml.abnf
{
  generate=[psi="no"]
  generatePsi=false // We employ hand-written Kotlin PSI
  parserClass="org.toml.lang.parse.TomlParser"
  parserUtilClass="org.toml.lang.parse.TomlParserUtil"

  elementTypeHolderClass="org.toml.lang.psi.TomlElementTypes"
  elementTypeClass="org.toml.lang.psi.TomlCompositeType"
  tokenTypeClass="org.toml.lang.psi.TomlTokenType"

  tokens=[
    COMMENT="regexp:#.*"

    BOOLEAN

    BARE_KEY_OR_NUMBER="regexp:\d+"
    BARE_KEY_OR_DATE="regexp:\d{4}-\d{2}-\d{2}"
    NUMBER
    BARE_KEY
    DATE_TIME

    BASIC_STRING
    LITERAL_STRING
    MULTILINE_BASIC_STRING
    MULTILINE_LITERAL_STRING

    EQ='='
    COMMA=','
    DOT='.'
    L_BRACKET='['
    R_BRACKET=']'
    L_CURLY='{'
    R_CURLY='}'
  ]
}

File ::= FileForm*

private FileForm ::= KeyValue | ArrayTable | Table {recoverWhile=FileForm_recover}
private FileForm_recover ::= !(
  BARE_KEY | BARE_KEY_OR_NUMBER | BARE_KEY_OR_DATE | BASIC_STRING | LITERAL_STRING | '['
)

KeyValue ::= Key '=' <<atSameLine Value>> {pin=1}

Key ::= BareKey | BASIC_STRING | LITERAL_STRING
private BareKey ::= BARE_KEY
  | <<remap 'BARE_KEY_OR_NUMBER' 'BARE_KEY'>>
  | <<remap 'BARE_KEY_OR_DATE' 'BARE_KEY'>>


// The last rule (BARE_KEY) used in the case of completion (key=IntellijIdeaRulezzz)
private Value ::= Literal | Array | InlineTable | BARE_KEY

Literal ::= Number | Date | BOOLEAN
  | BASIC_STRING | LITERAL_STRING
  | MULTILINE_BASIC_STRING | MULTILINE_LITERAL_STRING

private Number ::= <<remap 'BARE_KEY_OR_NUMBER' 'NUMBER'>> | NUMBER
private Date ::= <<remap 'BARE_KEY_OR_DATE' 'DATE_TIME'>> | DATE_TIME

Array ::= '[' ArrayElement* ']' {pin=1}
private ArrayElement ::= Value (','|&']') {pin=1}

Table ::= TableHeader KeyValue*
TableHeader ::= '[' Key ('.' Key)* ']' {pin=1}

ArrayTable ::= ArrayTableHeader KeyValue*
ArrayTableHeader ::= '[''[' Key ('.' Key)* ']'']' {pin=2 elementType=TableHeader}

InlineTable ::= '{' InlineTableElement* '}' {pin=1}
private InlineTableElement ::= KeyValue (','|&'}') {pin=1}
