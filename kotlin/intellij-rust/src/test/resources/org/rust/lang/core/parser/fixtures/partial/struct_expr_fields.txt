FILE
  RsStructItemImpl(STRUCT_ITEM)
    PsiElement(struct)('struct')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('S')
    PsiWhiteSpace(' ')
    RsBlockFieldsImpl(BLOCK_FIELDS)
      PsiElement({)('{')
      PsiWhiteSpace('\n    ')
      RsFieldDeclImpl(FIELD_DECL)
        PsiElement(identifier)('foo')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        RsTypeReferenceImpl(TYPE_REFERENCE)
          RsBaseTypeImpl(BASE_TYPE)
            RsPathImpl(PATH)
              PsiElement(identifier)('i32')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      RsFieldDeclImpl(FIELD_DECL)
        PsiElement(identifier)('bar')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        RsTypeReferenceImpl(TYPE_REFERENCE)
          RsBaseTypeImpl(BASE_TYPE)
            RsPathImpl(PATH)
              PsiElement(identifier)('i32')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      RsFieldDeclImpl(FIELD_DECL)
        PsiElement(identifier)('baz')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        RsTypeReferenceImpl(TYPE_REFERENCE)
          RsBaseTypeImpl(BASE_TYPE)
            RsPathImpl(PATH)
              PsiElement(identifier)('i32')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      RsFieldDeclImpl(FIELD_DECL)
        PsiElement(identifier)('quux')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        RsTypeReferenceImpl(TYPE_REFERENCE)
          RsBaseTypeImpl(BASE_TYPE)
            RsPathImpl(PATH)
              PsiElement(identifier)('i32')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      RsFieldDeclImpl(FIELD_DECL)
        PsiElement(identifier)('quazar')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        RsTypeReferenceImpl(TYPE_REFERENCE)
          RsBaseTypeImpl(BASE_TYPE)
            RsPathImpl(PATH)
              PsiElement(identifier)('i32')
      PsiElement(,)(',')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  RsFunctionImpl(FUNCTION)
    PsiElement(fn)('fn')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('main')
    RsValueParameterListImpl(VALUE_PARAMETER_LIST)
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    RsBlockImpl(BLOCK)
      PsiElement({)('{')
      PsiWhiteSpace('\n    ')
      RsLetDeclImpl(LET_DECL)
        PsiElement(let)('let')
        PsiWhiteSpace(' ')
        RsPatWildImpl(PAT_WILD)
          PsiElement(_)('_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        RsStructLiteralImpl(STRUCT_LITERAL)
          RsPathImpl(PATH)
            PsiElement(identifier)('S')
          PsiWhiteSpace(' ')
          RsStructLiteralBodyImpl(STRUCT_LITERAL_BODY)
            PsiElement({)('{')
            PsiWhiteSpace('\n        ')
            RsStructLiteralFieldImpl(STRUCT_LITERAL_FIELD)
              PsiElement(identifier)('foo')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              RsLitExprImpl(LIT_EXPR)
                PsiElement(INTEGER_LITERAL)('92')
            PsiElement(,)(',')
            PsiWhiteSpace('\n        ')
            RsStructLiteralFieldImpl(STRUCT_LITERAL_FIELD)
              PsiElement(identifier)('bar')
            PsiErrorElement:':' expected, got 'baz'
              <empty list>
            PsiWhiteSpace('\n        ')
            RsStructLiteralFieldImpl(STRUCT_LITERAL_FIELD)
              PsiElement(identifier)('baz')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              RsLitExprImpl(LIT_EXPR)
                PsiElement(INTEGER_LITERAL)('62')
            PsiElement(,)(',')
            PsiWhiteSpace('\n        ')
            RsStructLiteralFieldImpl(STRUCT_LITERAL_FIELD)
              PsiElement(identifier)('quux')
            PsiElement(:)(':')
            PsiErrorElement:<any expr> expected, got ','
              <empty list>
      PsiWhiteSpace(' ')
      PsiElement(,)(',')
      PsiWhiteSpace('\n        ')
      RsPathExprImpl(PATH_EXPR)
        RsPathImpl(PATH)
          PsiElement(identifier)('quazar')
      PsiElement(:)(':')
      PsiErrorElement:<scalar type reference> expected, got '42'
        <empty list>
      PsiWhiteSpace(' ')
      RsLitExprImpl(LIT_EXPR)
        PsiElement(INTEGER_LITERAL)('42')
        PsiErrorElement:'&', '(', ';', <add bin op>, <assign bin op>, <comp bin op>, <mul bin op>, <rel comp bin op>, '[', '^', '|' or '}' expected, got ','
          <empty list>
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      PsiElement(})('}')
  PsiWhiteSpace('\n')
  PsiErrorElement:'}' unexpected
    PsiElement(})('}')
