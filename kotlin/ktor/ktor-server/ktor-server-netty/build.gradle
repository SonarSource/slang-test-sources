description = ''
dependencies {
    compile project(':ktor-server:ktor-server-host-common')
    compile group: 'io.netty', name: 'netty-codec-http2', version: netty_version
    compile group: 'org.eclipse.jetty.alpn', name: 'alpn-api', version: jetty_alpn_api_version
    testCompile project(':ktor-server:ktor-server-test-host')
    testCompile project(':ktor-server:ktor-server-core')
    testCompile group: 'io.netty', name: 'netty-tcnative', version: netty_tcnative_version
    testCompile group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: netty_tcnative_version
}

def enableAlpnProp = project.hasProperty('enableAlpn')
if (enableAlpnProp) {
    def nativeClassifier;
    def osName = System.getProperty('os.name').toLowerCase()

    if (osName.contains('win')) {
        nativeClassifier = 'windows-x86_64'
    } else if (osName.contains('linux')) {
        nativeClassifier = 'linux-x86_64'
    } else if (osName.contains('mac')) {
        nativeClassifier = 'osx-x86_64'
    } else {
        throw new InvalidUserDataException("Unsupoprted os family $osName")
    }

    dependencies {
        compile group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: netty_tcnative_version, classifier: nativeClassifier
    }
}
