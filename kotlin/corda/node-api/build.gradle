apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'com.jfrog.artifactory'

description 'Corda node API'

dependencies {
    compile project(":core")
    compile project(":serialization")  // TODO Remove this once the NetworkBootstrapper class is moved into the tools:bootstrapper module

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // TODO: remove the forced update of commons-collections and beanutils when artemis updates them
    compile "org.apache.commons:commons-collections4:${commons_collections_version}"
    compile "commons-beanutils:commons-beanutils:${beanutils_version}"
    compile "org.apache.activemq:artemis-core-client:${artemis_version}"
    compile "org.apache.activemq:artemis-commons:${artemis_version}"

    // For adding serialisation of file upload streams to RPC
    // TODO: Remove this dependency and the code that requires it
    compile "commons-fileupload:commons-fileupload:$fileupload_version"

    compile "net.corda.plugins:cordform-common:$gradle_plugins_version"

    // TypeSafe Config: for simple and human friendly config files.
    compile "com.typesafe:config:$typesafe_config_version"

    compile "org.apache.qpid:proton-j:$protonj_version"

    // FastClasspathScanner: classpath scanning - needed for the NetworkBootstrapper.
    compile "io.github.lukehutch:fast-classpath-scanner:$fast_classpath_scanner_version"

    // For caches rather than guava
    compile "com.github.ben-manes.caffeine:caffeine:$caffeine_version"

    // Unit testing helpers.
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile project(':node-driver')

    compile ("org.apache.activemq:artemis-amqp-protocol:${artemis_version}") {
        // Gains our proton-j version from core module.
        exclude group: 'org.apache.qpid', module: 'proton-j'
    }
}

configurations {
    testArtifacts.extendsFrom testRuntime
}

task testJar(type: Jar) {
    classifier "tests"
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}

jar {
    baseName 'corda-node-api'
}

publish {
    name jar.baseName
}
