== Ab ==
abstract class Ab {
    abstract fun getArray() : Array<Int>
}
---------------------
=====================
== getArray ==
abstract fun getArray() : Array<Int>
---------------------
=====================
== test ==
fun test(ab: Ab) {
    ab.getArray()[1]
}
---------------------
                       <v0>: {<: Ab}           NEW: magic[FAKE_INITIALIZER](ab: Ab) -> <v0>       
ab                     <v1>: {<: Ab}           NEW: r(ab) -> <v1>                                 
getArray()             <v2>: {<: Array<Int>}   NEW: call(getArray(), getArray|<v1>) -> <v2>       
ab.getArray()          <v2>: {<: Array<Int>}   COPY                                               
1                      <v3>: Int               NEW: r(1) -> <v3>                                  
ab.getArray()[1]       <v4>: *                 NEW: call(ab.getArray()[1], get|<v2>, <v3>) -> <v4>
{ ab.getArray()[1] }   <v4>: *                 COPY                                               
=====================
