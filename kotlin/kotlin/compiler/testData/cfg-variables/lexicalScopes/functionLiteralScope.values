== foo ==
fun foo() {
    "before"
    val b = 1
    val f = { x: Int ->
        val a = x + b
    }
    "after"
}
---------------------
"before"                                                             <v0>: *                    NEW: r("before") -> <v0>
1                                                                    <v1>: Int                  NEW: r(1) -> <v1>
{ x: Int -> val a = x + b }                                          <v2>: {<: (Int) -> Unit}   NEW: r({ x: Int -> val a = x + b }) -> <v2>
"after"                                                              <v3>: *                    NEW: r("after") -> <v3>
{ "before" val b = 1 val f = { x: Int -> val a = x + b } "after" }   <v3>: *                    COPY
=====================
== anonymous_0 ==
{ x: Int ->
        val a = x + b
    }
---------------------
        <v0>: Int   NEW: magic[FAKE_INITIALIZER](x: Int) -> <v0>
x       <v1>: Int   NEW: r(x) -> <v1>                           
b       <v2>: Int   NEW: r(b) -> <v2>                           
x + b   <v3>: Int   NEW: call(x + b, plus|<v1>, <v2>) -> <v3>   
=====================
