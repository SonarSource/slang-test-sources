package

public var baz: kotlin.Int
public val kotlin.Any.extExtVal: kotlin.Any.() -> kotlin.Unit
public val kotlin.Any.extVal: () -> kotlin.Unit
public val kotlin.Any.extValFun: () -> kotlin.Unit
public fun bar(): kotlin.Unit
public fun kotlin.Any.ext(): kotlin.Unit
public operator fun kotlin.Any.invoke(): kotlin.Unit
public operator fun kotlin.Any.plus(/*0*/ a: kotlin.Any): kotlin.Unit
public fun dynamic.test(): kotlin.Unit

public final class C {
    public constructor C()
    public final val foo: kotlin.String.() -> kotlin.Unit
    public final val s: kotlin.String = ""
    public final val withInvoke: WithInvoke
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public final operator fun kotlin.String.invoke(): kotlin.Unit
    public final fun dynamic.test(): kotlin.Unit
}

public final class WithInvoke {
    public constructor WithInvoke()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun invoke(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
