package test

public final enum class My : kotlin.Enum<test.My> {
    enum entry ALPHA

    enum entry BETA

    enum entry OMEGA

    private constructor My()
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.My): kotlin.Int

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.My
    public final /*synthesized*/ fun values(): kotlin.Array<test.My>
}

public final annotation class ann : kotlin.Annotation {
    public constructor ann(/*0*/ vararg m: test.My /*kotlin.Array<out test.My>*/)
    public final val m: kotlin.Array<out test.My>
}

@test.ann(m = {My.ALPHA, My.BETA}) public final annotation class annotated : kotlin.Annotation {
    public constructor annotated()
}
