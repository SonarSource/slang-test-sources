package test

public val arrayConst: dynamic = {1.toByte(), 2.toByte()}
public val booleanConst: dynamic = true
public val byteConst: dynamic = 10.toByte()
public val charConst: dynamic = \u0041 ('A')
public val doubleConst: dynamic = 3.0.toDouble()
public val dynamicConst: dynamic = 100
public val enumConst: dynamic = Weapon.ROCK
public val floatConst: dynamic = 2.0.toFloat()
public val intConst: dynamic = 30
public val longConst: dynamic = 40.toLong()
public val shortConst: dynamic = 20.toShort()
public val stringConst: dynamic = "abcd"

public final class Class {
    public constructor Class()
    public final val arrayConst: dynamic = {1.toByte(), 2.toByte()}
    public final val booleanConst: dynamic = true
    public final val byteConst: dynamic = 10.toByte()
    public final val charConst: dynamic = \u0041 ('A')
    public final val doubleConst: dynamic = 3.0.toDouble()
    public final val dynamicConst: dynamic = 100
    public final val enumConst: dynamic = Weapon.ROCK
    public final val floatConst: dynamic = 2.0.toFloat()
    public final val intConst: dynamic = 30
    public final val longConst: dynamic = 40.toLong()
    public final val shortConst: dynamic = 20.toShort()
    public final val stringConst: dynamic = "abcd"
}

public final enum class Weapon : kotlin.Enum<test.Weapon> {
    enum entry ROCK

    enum entry PAPER

    enum entry SCISSORS

    private constructor Weapon()
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Weapon): kotlin.Int

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.Weapon
    public final /*synthesized*/ fun values(): kotlin.Array<test.Weapon>
}
